import { Sha256 } from '../../../crypto/sha256';
import { Transaction } from '../../../transaction';
import { AuthenticationProgramCommon, AuthenticationProgramStateCommon } from '../../state';
import { AuthenticationErrorBCH } from './bch-errors';
import { OpcodesBCH } from './bch-opcodes';
export declare enum ConsensusBCH {
    schnorrSignatureLength = 64
}
export interface AuthenticationProgramBCH extends AuthenticationProgramCommon {
}
export interface AuthenticationProgramStateBCH extends AuthenticationProgramStateCommon<OpcodesBCH, AuthenticationErrorBCH> {
}
export declare const createTestAuthenticationProgramBCH: (unlockingBytecode: Uint8Array, lockingBytecode: Uint8Array, sha256: Sha256, satoshis?: bigint) => {
    inputIndex: number;
    sourceOutput: import("../../../transaction").Output;
    spendingTransaction: Transaction;
};
//# sourceMappingURL=bch-types.d.ts.map