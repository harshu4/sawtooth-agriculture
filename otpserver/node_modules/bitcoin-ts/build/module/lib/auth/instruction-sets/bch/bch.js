import { instantiateRipemd160, instantiateSecp256k1, instantiateSha1, instantiateSha256 } from '../../../crypto/crypto';
import { createAuthenticationVirtualMachine } from '../../virtual-machine';
import { createInstructionSetBCH, getFlagsForInstructionSetBCH, instructionSetBCHCurrentStrict } from './bch-instruction-sets';
export * from './bch-descriptions';
export * from './bch-errors';
export * from './bch-instruction-sets';
export * from './bch-opcodes';
export * from './bch-operations';
export * from './bch-types';
export * from './fixtures/bitcoin-abc/bitcoin-abc-utils';
/**
 * Initialize a virtual machine using the provided BCH instruction set.
 *
 * @param instructionSet the VM version to instantiate â€“ by default, the current
 * "strict" VM is used (`instructionSetBCHCurrentStrict`)
 */
export const instantiateVirtualMachineBCH = async (instructionSet = instructionSetBCHCurrentStrict) => {
    const [sha1, sha256, ripemd160, secp256k1] = await Promise.all([
        instantiateSha1(),
        instantiateSha256(),
        instantiateRipemd160(),
        instantiateSecp256k1()
    ]);
    return createAuthenticationVirtualMachine(createInstructionSetBCH(getFlagsForInstructionSetBCH(instructionSet), sha1, sha256, ripemd160, secp256k1));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvYmNoL2JjaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsb0JBQW9CLEVBQ3BCLG9CQUFvQixFQUNwQixlQUFlLEVBQ2YsaUJBQWlCLEVBQ2xCLE1BQU0sd0JBQXdCLENBQUM7QUFDaEMsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFM0UsT0FBTyxFQUNMLHVCQUF1QixFQUN2Qiw0QkFBNEIsRUFDNUIsOEJBQThCLEVBQy9CLE1BQU0sd0JBQXdCLENBQUM7QUFFaEMsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLGNBQWMsQ0FBQztBQUM3QixjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyxhQUFhLENBQUM7QUFDNUIsY0FBYywwQ0FBMEMsQ0FBQztBQUV6RDs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFHLEtBQUssRUFDL0MsY0FBYyxHQUFHLDhCQUE4QixFQUMvQyxFQUFFO0lBQ0YsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUM3RCxlQUFlLEVBQUU7UUFDakIsaUJBQWlCLEVBQUU7UUFDbkIsb0JBQW9CLEVBQUU7UUFDdEIsb0JBQW9CLEVBQUU7S0FDdkIsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxrQ0FBa0MsQ0FDdkMsdUJBQXVCLENBQ3JCLDRCQUE0QixDQUFDLGNBQWMsQ0FBQyxFQUM1QyxJQUFJLEVBQ0osTUFBTSxFQUNOLFNBQVMsRUFDVCxTQUFTLENBQ1YsQ0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=