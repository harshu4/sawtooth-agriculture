import { applyError, AuthenticationErrorCommon } from './errors';
import { OpcodesCommon } from './opcodes';
export const opNop = (flags) => (state) => flags.disallowUpgradableNops
    ? applyError(AuthenticationErrorCommon.calledUpgradableNop, state)
    : state;
export const nonOperations = (flags) => ({
    [OpcodesCommon.OP_NOP]: opNop(flags),
    [OpcodesCommon.OP_NOP1]: opNop(flags),
    [OpcodesCommon.OP_NOP4]: opNop(flags),
    [OpcodesCommon.OP_NOP5]: opNop(flags),
    [OpcodesCommon.OP_NOP6]: opNop(flags),
    [OpcodesCommon.OP_NOP7]: opNop(flags),
    [OpcodesCommon.OP_NOP8]: opNop(flags),
    [OpcodesCommon.OP_NOP9]: opNop(flags),
    [OpcodesCommon.OP_NOP10]: opNop(flags)
});
/**
 * "Disabled" operations are explicitly forbidden from occurring anywhere in a
 * script, even within an unexecuted branch.
 */
export const disabledOperation = () => (state) => applyError(AuthenticationErrorCommon.unknownOpcode, state);
export const disabledOperations = () => ({
    [OpcodesCommon.OP_CAT]: disabledOperation(),
    [OpcodesCommon.OP_SUBSTR]: disabledOperation(),
    [OpcodesCommon.OP_LEFT]: disabledOperation(),
    [OpcodesCommon.OP_RIGHT]: disabledOperation(),
    [OpcodesCommon.OP_INVERT]: disabledOperation(),
    [OpcodesCommon.OP_AND]: disabledOperation(),
    [OpcodesCommon.OP_OR]: disabledOperation(),
    [OpcodesCommon.OP_XOR]: disabledOperation(),
    [OpcodesCommon.OP_2MUL]: disabledOperation(),
    [OpcodesCommon.OP_2DIV]: disabledOperation(),
    [OpcodesCommon.OP_MUL]: disabledOperation(),
    [OpcodesCommon.OP_DIV]: disabledOperation(),
    [OpcodesCommon.OP_MOD]: disabledOperation(),
    [OpcodesCommon.OP_LSHIFT]: disabledOperation(),
    [OpcodesCommon.OP_RSHIFT]: disabledOperation()
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvY29tbW9uL25vcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLHlCQUF5QixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFMUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLENBQVEsS0FBMEMsRUFBRSxFQUFFLENBQUMsQ0FDMUUsS0FBWSxFQUNaLEVBQUUsQ0FDRixLQUFLLENBQUMsc0JBQXNCO0lBQzFCLENBQUMsQ0FBQyxVQUFVLENBQUMseUJBQXlCLENBQUMsbUJBQW1CLEVBQUUsS0FBSyxDQUFDO0lBQ2xFLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFFWixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsQ0FBUSxLQUVwQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxDQUFRLEtBQUssQ0FBQztJQUMzQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQVEsS0FBSyxDQUFDO0lBQzVDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssQ0FBUSxLQUFLLENBQUM7SUFDNUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUUsS0FBSyxDQUFRLEtBQUssQ0FBQztJQUM1QyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQVEsS0FBSyxDQUFDO0lBQzVDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssQ0FBUSxLQUFLLENBQUM7SUFDNUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUUsS0FBSyxDQUFRLEtBQUssQ0FBQztJQUM1QyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQVEsS0FBSyxDQUFDO0lBQzVDLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEtBQUssQ0FBUSxLQUFLLENBQUM7Q0FDOUMsQ0FBQyxDQUFDO0FBRUg7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsR0FHN0IsRUFBRSxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUUsQ0FDdEIsVUFBVSxDQUFnQix5QkFBeUIsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFFNUUsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsR0FHOUIsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDMUQsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzdELENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtJQUMzRCxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDNUQsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzdELENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtJQUMxRCxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDekQsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzFELENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtJQUMzRCxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDM0QsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzFELENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtJQUMxRCxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDMUQsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzdELENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtDQUM5RCxDQUFDLENBQUMifQ==