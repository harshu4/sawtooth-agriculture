"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const transaction_1 = require("../../../transaction");
const utils_1 = require("../../../utils/utils");
var ConsensusBCH;
(function (ConsensusBCH) {
    ConsensusBCH[ConsensusBCH["schnorrSignatureLength"] = 64] = "schnorrSignatureLength";
})(ConsensusBCH = exports.ConsensusBCH || (exports.ConsensusBCH = {}));
exports.createTestAuthenticationProgramBCH = (unlockingBytecode, lockingBytecode, sha256, satoshis = BigInt(0)) => {
    const testFundingTransaction = {
        inputs: [
            {
                outpointIndex: 0xffffffff,
                outpointTransactionHash: utils_1.hexToBin('0000000000000000000000000000000000000000000000000000000000000000'),
                sequenceNumber: 0xffffffff,
                unlockingBytecode: Uint8Array.of(0, 0)
            }
        ],
        locktime: 0,
        outputs: [{ lockingBytecode, satoshis }],
        version: 1
    };
    const testSpendingTransaction = {
        inputs: [
            {
                outpointIndex: 0,
                outpointTransactionHash: utils_1.hexToBin(utils_1.swapEndianness(transaction_1.getBitcoinTransactionId(transaction_1.serializeTransaction(testFundingTransaction), sha256))),
                sequenceNumber: 0xffffffff,
                unlockingBytecode
            }
        ],
        locktime: 0,
        outputs: [{ lockingBytecode: Uint8Array.of(), satoshis }],
        version: 1
    };
    return {
        inputIndex: 0,
        sourceOutput: testFundingTransaction.outputs[0],
        spendingTransaction: testSpendingTransaction
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLXR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvYmNoL2JjaC10eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHNEQUk4QjtBQUM5QixnREFBZ0U7QUFTaEUsSUFBWSxZQUVYO0FBRkQsV0FBWSxZQUFZO0lBQ3RCLG9GQUEyQixDQUFBO0FBQzdCLENBQUMsRUFGVyxZQUFZLEdBQVosb0JBQVksS0FBWixvQkFBWSxRQUV2QjtBQVlZLFFBQUEsa0NBQWtDLEdBQUcsQ0FDaEQsaUJBQTZCLEVBQzdCLGVBQTJCLEVBQzNCLE1BQWMsRUFDZCxRQUFRLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUNwQixFQUFFO0lBQ0YsTUFBTSxzQkFBc0IsR0FBZ0I7UUFDMUMsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsYUFBYSxFQUFFLFVBQVU7Z0JBQ3pCLHVCQUF1QixFQUFFLGdCQUFRLENBQy9CLGtFQUFrRSxDQUNuRTtnQkFDRCxjQUFjLEVBQUUsVUFBVTtnQkFDMUIsaUJBQWlCLEVBQUUsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ3ZDO1NBQ0Y7UUFDRCxRQUFRLEVBQUUsQ0FBQztRQUNYLE9BQU8sRUFBRSxDQUFDLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSxDQUFDO1FBQ3hDLE9BQU8sRUFBRSxDQUFDO0tBQ1gsQ0FBQztJQUNGLE1BQU0sdUJBQXVCLEdBQWdCO1FBQzNDLE1BQU0sRUFBRTtZQUNOO2dCQUNFLGFBQWEsRUFBRSxDQUFDO2dCQUNoQix1QkFBdUIsRUFBRSxnQkFBUSxDQUMvQixzQkFBYyxDQUNaLHFDQUF1QixDQUNyQixrQ0FBb0IsQ0FBQyxzQkFBc0IsQ0FBQyxFQUM1QyxNQUFNLENBQ1AsQ0FDRixDQUNGO2dCQUNELGNBQWMsRUFBRSxVQUFVO2dCQUMxQixpQkFBaUI7YUFDbEI7U0FDRjtRQUNELFFBQVEsRUFBRSxDQUFDO1FBQ1gsT0FBTyxFQUFFLENBQUMsRUFBRSxlQUFlLEVBQUUsVUFBVSxDQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDO1FBQ3pELE9BQU8sRUFBRSxDQUFDO0tBQ1gsQ0FBQztJQUNGLE9BQU87UUFDTCxVQUFVLEVBQUUsQ0FBQztRQUNiLFlBQVksRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQy9DLG1CQUFtQixFQUFFLHVCQUF1QjtLQUM3QyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=