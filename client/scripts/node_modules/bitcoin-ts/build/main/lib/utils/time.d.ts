/**
 * Convert a Javascript `Date` object to its equivalent LockTime
 * representation in an `AuthenticationVirtualMachine`.
 *
 * TODO: this method should error past the overflow Date and for dates which
 * would become BlockHeights when encoded.
 *
 * @param date the Date to convert to a BlockTime Uint8Array
 */
export declare const dateToLockTime: (date: Date) => Uint8Array;
/**
 * Parse a locktime, returning a `number` for block heights, a `Date` for block
 * times, and a string for parsing errors.
 *
 * Note: this method does not check the length of locktime
 *
 * @param bin the 4-byte Uint8Array locktime to parse
 */
export declare const parseLockTime: (bin: Uint8Array) => number | Date | import("../auth/instruction-sets/common/types").ScriptNumberError;
//# sourceMappingURL=time.d.ts.map